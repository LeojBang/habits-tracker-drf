services:
  web:
    build: .
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    restart: on-failure
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
  db:
    image: postgres:latest
    restart: on-failure
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL","-c","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  celery:
    build: .
    command: celery -A config worker -l INFO
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web

  celery-beat:
    build: .
    command: celery -A config beat -l INFO
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web


volumes:
  postgres_data:
  static_volume:
  redis_data: