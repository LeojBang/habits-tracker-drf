services:
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./:/app
    restart: on-failure
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  db:
    image: postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    restart: on-failure
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
  celery:
    build: .
    command: celery -A config worker -l INFO
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - db
      - redis
  celery-beat:
    build: .
    command: celery -A config beat -l INFO
    env_file:
      - .env
    depends_on:
      - db
      - redis

volumes:
  postgres_data: