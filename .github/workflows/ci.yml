name: Django CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run linter
        run: flake8 . --count --show-source --statistics

  test:
    needs: lint
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: 'settings.test'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run tests with coverage
        run: |
          coverage run --source='.' manage.py test
          coverage report -m

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/habits-tracker-drf:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/habits-tracker-drf:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'

    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to production
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "
            set -e
            cd /home/${{ secrets.SSH_USER }}/habits-tracker-drf
            git fetch origin
            git checkout ${{ github.ref == 'refs/heads/develop' && echo 'develop' || echo 'master' }} --force
            git reset --hard origin/${{ github.ref == 'refs/heads/develop' && echo 'develop' || echo 'master' }}
            docker compose down --remove-orphans
            docker compose pull
            docker compose build --no-cache
            docker compose up -d --wait
            docker system prune -f
          "